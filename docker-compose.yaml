version: "3.9"

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  seed:
    build: .
    container_name: seed_runner
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    command: ["node", "dist/seeds/produto.seed.js"]
    restart: "no"

  app:
    build: .
    container_name: node_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
      seed:
        condition: service_completed_successfully
    environment:
      NODE_ENV: production
      APP_PORT: ${APP_PORT}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "${APP_PORT}:3000"
    command: ["node", "dist/index.js"]

volumes:
  postgres_data: